#!/usr/bin/env node

'use strict';

var path = require('path')
  , fs = require('fs');

var async = require('async')
  , program = require('commander')
  , saveLoc = process.cwd();

program
  .version(require('../package.json').version)
  .option('--api-key <string>')
  .option('--board-url <string>')
  .option('--token <string>')
  .option('-d, --datafile <string>')
  .option('-o, --outfile <string>')
  .option('--sprint-name <string>', 'The name of the sprint', 'Infinity')
  .option('--end-date <string>', 'E.g. "Jan 1 2015"')
  .option('--silent <bool>', 'Toggle output logging', false)
  .parse(process.argv);

if(program.datafile && fs.existsSync(path.join(saveLoc, program.datafile))) {
  if(!program.silent) {
    console.log('Using data file for board url, sprint name, and end date.');
  }

  var data = require(path.join(saveLoc, program.datafile));
  program.boardUrl = data.boardUrl || program.boardUrl;
  program.sprintName = data.sprintName || program.sprintName;
  program.endDate = data.endDate || program.endDate;
}

var updateLists = function(cb) {
  return program.apiKey && program.boardUrl && program.token ?
    require('../lib/fetch.js')(program, cb) :
    cb(null);
};

var saveData = function(cb) {
  if(program.datafile) {
    var datafile = path.join(saveLoc, program.datafile)
      , data = {};
    if(fs.existsSync(datafile)) {
      data = require(datafile);
    }
    data.boardUrl = program.boardUrl;
    data.sprintName = program.sprintName;
    data.endDate = program.endDate;
    fs.writeFileSync(datafile, JSON.stringify(data));
    cb(null);
  }
};

var updateData = function(cb) {
  return program.datafile ?
    require('../lib/data.js')(program, cb) :
    cb(null);
};

var makeSite = function(cb) {
  return program.outfile ?
    require('../lib/site.js')(program, cb) :
    cb(null);
};

var finish = function(err) {
  if(err) { throw err; }
  if(!program.silent) {
    console.log('Done.');
  }
};

async.series([
  saveData,
  updateLists,
  updateData,
  makeSite
], finish);

